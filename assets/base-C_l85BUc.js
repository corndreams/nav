import{B as g,q as O,ag as y,ah as P,N as b,g as B,b as C,r as h,c as E,u as I}from"./index-CYdbwONi.js";function K(s){for(var e=-1,n=s==null?0:s.length,r={};++e<n;){var c=s[e];r[c[0]]=c[1]}return r}const D=s=>s===void 0,G=s=>typeof s=="boolean",j=s=>typeof s=="number",z=s=>typeof Element>"u"?!1:s instanceof Element,q=s=>g(s)?!Number.isNaN(Number(s)):!1,_=(s="")=>s.split(" ").filter(e=>!!e.trim()),F=(s,e)=>{if(!s||!e)return!1;if(e.includes(" "))throw new Error("className should not contain space.");return s.classList.contains(e)},H=(s,e)=>{!s||!e.trim()||s.classList.add(..._(e))},M=(s,e)=>{!s||!e.trim()||s.classList.remove(..._(e))};function Q(s,e="px"){if(!s)return"";if(j(s)||q(s))return`${s}${e}`;if(g(s))return s}const w="__epPropKey",R=s=>s,L=s=>O(s)&&!!s[w],T=(s,e)=>{if(!O(s)||L(s))return s;const{values:n,required:r,default:c,type:i,validator:d}=s,p={type:i,required:!!r,validator:n||d?m=>{let u=!1,f=[];if(n&&(f=Array.from(n),y(s,"default")&&f.push(c),u||(u=f.includes(m))),d&&(u||(u=d(m))),!u&&f.length>0){const $=[...new Set(f)].map(N=>JSON.stringify(N)).join(", ");P(`Invalid prop: validation failed${e?` for prop "${e}"`:""}. Expected one of [${$}], got value ${JSON.stringify(m)}.`)}return u}:void 0,[w]:!0};return y(s,"default")&&(p.default=c),p},W=s=>K(Object.entries(s).map(([e,n])=>[e,T(n,e)])),X=(s,e)=>{if(s.install=n=>{for(const r of[s,...Object.values(e??{})])n.component(r.name,r)},e)for(const[n,r]of Object.entries(e))s[n]=r;return s},Y=s=>(s.install=b,s),v="el",x="is-",l=(s,e,n,r,c)=>{let i=`${s}-${e}`;return n&&(i+=`-${n}`),r&&(i+=`__${r}`),c&&(i+=`--${c}`),i},A=Symbol("namespaceContextKey"),J=s=>{const e=B()?C(A,h(v)):h(v);return E(()=>I(e)||v)},Z=(s,e)=>{const n=J();return{namespace:n,b:(t="")=>l(n.value,s,t,"",""),e:t=>t?l(n.value,s,"",t,""):"",m:t=>t?l(n.value,s,"","",t):"",be:(t,a)=>t&&a?l(n.value,s,t,a,""):"",em:(t,a)=>t&&a?l(n.value,s,"",t,a):"",bm:(t,a)=>t&&a?l(n.value,s,t,"",a):"",bem:(t,a,o)=>t&&a&&o?l(n.value,s,t,a,o):"",is:(t,...a)=>{const o=a.length>=1?a[0]:!0;return t&&o?`${x}${t}`:""},cssVar:t=>{const a={};for(const o in t)t[o]&&(a[`--${n.value}-${o}`]=t[o]);return a},cssVarName:t=>`--${n.value}-${t}`,cssVarBlock:t=>{const a={};for(const o in t)t[o]&&(a[`--${n.value}-${s}-${o}`]=t[o]);return a},cssVarBlockName:t=>`--${n.value}-${s}-${t}`}};var k=(s,e)=>{const n=s.__vccOpts||s;for(const[r,c]of e)n[r]=c;return n};export{k as _,W as a,T as b,j as c,R as d,Z as e,K as f,z as g,Y as h,G as i,Q as j,H as k,F as l,D as m,M as r,J as u,X as w};
